trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  dotnetVersion: 7.x
  solutionName: TodoApp.sln
  buildConfiguration: Release

steps:
- task: UseDotNet@2
  displayName: 'Use .NET $(dotnetVersion)'
  inputs:
    version: $(dotnetVersion)

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: restore
    projects: $(solutionName)

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: build
    projects: $(solutionName)
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: test
    projects: '**/*.@(Unit|Integration)Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore --settings coverlet.runsettings'
    publishTestResults: true

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- task: SnykSecurityScan@1
  displayName: Snyk Security Scan
  inputs:
    serviceConnectionEndpoint: 'Snyk'
    testType: 'app'
    severityThreshold: 'high'
    monitorWhen: 'always'
    failOnIssues: true
    additionalArguments: '--all-projects'

- task: DotNetCoreCLI@2
  displayName: Publish API project
  inputs:
    command: publish
    projects: '**/*.Api.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishPipelineArtifact@1
  displayName: 'Publish build artifacts'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'TodoApi'
